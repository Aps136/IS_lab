student@cl18-04:~/Documents/230911004_OS/lab3$ touch f1 f2 f3 f4
student@cl18-04:~/Documents/230911004_OS/lab3$ ls
f1  f2  f3  f4
student@cl18-04:~/Documents/230911004_OS/lab3$ ls f[1-3] 
f1  f2  f3
student@cl18-04:~/Documents/230911004_OS/lab3$ ls f[0-9]
f1  f2  f3  f4
student@cl18-04:~/Documents/230911004_OS/lab3$ cat >p1.sh
echo "This folder contents: "
ls -l
echo "Sample text written to file" >f1.txt
echo "File COntent: "
cat f1.txt
^Z
[1]+  Stopped                 cat > p1.sh
student@cl18-04:~/Documents/230911004_OS/lab3$ cat p1.sh
echo "This folder contents: "
ls -l
echo "Sample text written to file" >f1.txt
echo "File COntent: "
cat f1.txt
student@cl18-04:~/Documents/230911004_OS/lab3$ 


ex1:
student@cl18-04:~/Documents/230911004_OS/lab3$ ./p3.sh
new
File is a directory yo
student@cl18-04:~/Documents/230911004_OS/lab3$ cat p3.sh 
read filename
if [ -d "$filename" ]; then
   echo "File is a directory yo"
else
   echo "File is a file yo"
fi

ex2:
student@cl18-04:~/Documents/230911004_OS/lab3$ cat p4.sh
read input
read folder
find "$folder" -type f -exec grep -l "$input" {} +




student@cl18-04:~/Documents/230911004_OS/lab3$ cat >check1.txt
text text 1234
^C
student@cl18-04:~/Documents/230911004_OS/lab3$ ./p4.sh
text
new
new/check1.txt
new/check.txt

ex3:
student@cl18-04:~/Documents/230911004_OS/lab3$ nano p6.sh
student@cl18-04:~/Documents/230911004_OS/lab3$ cat p6.sh
find . -type f -name "*.txt" | while read -r filepath; do
	direp=$(dirname "$filepath")
	filename=$(basename "$filepath" .txt)
	new="${direp}/${filename}.text"
	mv "$filepath" "$new"
	echo "renamed: $filepath to $new"
done

student@cl18-04:~/Documents/230911004_OS/lab3$ ./p6.sh
renamed: ./f1.txt to ./f1.text
renamed: ./new/check1.txt to ./new/check1.text
renamed: ./new/check.txt to ./new/check.text
renamed: ./f2.txt to ./f2.text

ex4:
student@cl18-04:~/Documents/230911004_OS/lab3$ cat p5.sh
read -p "ENter basic salary: " basics
read -p "ENter travel allowance yo: " ta
gs=$(echo "$basics + $ta + ($basics * 0.1)" | bc)
echo "Gross salary issss: $gs"





ex5:
aps@KVK-OFFICE-DELL:~$ cat p1.sh
#!/bin/bash
read -p "Enter extension: " extension
read -p "Enter name of folder: " folder
if [ -z "$extension" ] || [ -z "$folder" ]; then
        echo "Error"
        exit 1
fi
mkdir -p "$folder"
extension="${extension#.}"
files=( *."$extension" )
cp "${files[@]}" "$folder/"
echo "Done"

ex6:
#!/bin/bash

echo "Modifying files in the current directory..."

# Loop through all regular files in the current directory
for file in *; do
    if [ -f "$file" ]; then
        echo "Processing: $file"
        sed -i -E 's/(^|[^.])ex:/ example:/g' "$file" # Replace with example:
       
    fi
done

echo "Modification complete. Check your files. ✔️"

ex7:
#!/bin/bash
read -p "Enter name of file: " filename
if [ ! -f "$filename" ]; then
        echo "Error"
        exit 1
fi
sed -i '2~2d' "$filename"
echo "done"


#prime
aps@KVK-OFFICE-DELL:~$ cat p2.sh
#!/bin/bash
read num
if (( num<=1 )); then
        echo "$num is not a prime number."
        exit 0
fi
if (( num==2 )); then
        echo "$num is a prime number."
        exit 0
fi
for (( i=2; i*i <= num; i++ ));do
        if (( num % i == 0 )); then
                echo "$num is not a prime number"
                exit 0
        fi
done
echo "$num is a prime number"

#factorial
aps@KVK-OFFICE-DELL:~$ cat p3.sh
#!/bin/bash
read -p "Enter number: " num
orig=$num
c=1
if (( num<0 )); then
        echo "Error"
        exit 1
fi
while (( num>0 )); do
        c=$((c * num))
        num=$((num - 1))
done
echo "$c is the factorial of orig"
aps@KVK-OFFICE-DELL:~$


LAB4
ex1:
  GNU nano 7.2                         ex1.sh                                   
sourcef="$1"
destf="$2"
if [ ! -f "$sourcef" ]; then
echo "Error, file DNE"
exit 1
fi
cp "$sourcef" "$destf"
if [ $? -eq 0 ]; then
echo "successfull"
else
echo "not done"
exit 1
fi

tudent@cl18-04:~/Documents/230911004_OS/lab4$ ./ex1.sh f1 f2
successfull

EX2
student@cl18-04:~/Documents/230911004_OS/lab4$ cat ex2.sh
for file in "$@"; do
if [ -f "$file" ]; then
rm -i "$file"
else
echo "Warning: file not found"
fi
done
echo "Script  finished"


1  2.save  c2.sh  cla1.sh  commands  ex1.sh  ex2.sh  f1  f2
student@cl18-04:~/Documents/230911004_OS/lab4$ ./ex2.sh f2
rm: remove regular file 'f2'? y
Script  finished


EX3
aps@KVK-OFFICE-DELL:~$ cat ex1.sh
customsort(){
local arr=("$@")
local n=${#arr[@]}
local i j temp
for((i=0; i<n-1; i++)); do
for((j=0; j<n-i-1; j++)); do
if [[ "${arr[j]}" > "${arr[j+1]}" ]]; then
temp="${arr[j]}"
arr[j]="${arr[j+1]}"
arr[j+1]="$temp"
fi
done
done
echo "${arr[@]}"
}
read -r -a sortedresultarr <<< "$(customsort "$@")"
for arg in "${sortedresultarr[@]}"; do
echo "- $arg"
done
exit 0
aps@KVK-OFFICE-DELL:~$ ./ex1.sh "hey" "im" "aparna"
- aparna
- hey
- im

EX4
aps@KVK-OFFICE-DELL:~$ cat ex2.sh
countl=0
cwords=0
cchars=0
inpfile=""
cline(){
local file="$1"
if [ -f "$file" ] && [ -r "$file" ]; then
local lc=$(wc -l < "$file" | awk '{print $1}')
echo "Lines: $lc"
else
echo "cannot read lines from file"
return 1
fi
}
countwords(){
local file="$1"
if [ -f "$file" ] && [ -r "$file" ]; then
local wc=$(wc -w < "$file" | awk '{print $1}')
echo "words: $wc"
else
echo "Error"
return 1
fi
}
countchars(){
local file="$1"
if [ -f "$file" ] && [ -r "$file" ]; then
local cc=$(wc -c < "$file" | awk '{print $1}')
echo "charachters: $cc"
else
echo "Error"
return 1
fi
}
dispusage(){
echo "Options: "
echo " -l Count lines "
echo " -w Count words "
echo " -c Count characters "
echo ""
exit 1
}
allarg=("$@")
if [ "$#" -eq 0 ]; then
dispusage
fi
for arg in "${allarg[@]}"; do
case "$arg" in
-l)
countl=1
;;
-w)
cwords=1
;;
-c)
cchars=1
;;
*)
inpfile="$arg"
;;
esac
done
if [ "$countl" -eq 1 ]; then
cline "$inpfile"
fi
if [ "$cwords" -eq 1 ]; then
countwords "$inpfile"
fi
if [ "$cchars" -eq 1 ]; then
countchars "$inpfile"
fi 
aps@KVK-OFFICE-DELL:~$ ./ex2.sh -l file.txt
Lines: 2
aps@KVK-OFFICE-DELL:~$ ./ex2.sh -w file.txt
words: 4
aps@KVK-OFFICE-DELL:~$ ./ex2.sh -c file.txt
charachters: 23

EX5
inpfile=""
patterns=()
dispusage(){
echo " <patternN>: One or more patterns to search/ del. enclose patterns within quotes"
echo " <inpfile>: path to the file to process"
echo ""
exit 1
}
buildgrep(){
local patterns=("$@")
local regex=""
local first=1
for p in "${patterns[@]}"; do
if [ "$first" -eq 1 ]; then
regex="$p"
first=0
else
regex+="|$p"
fi
done
echo "$regex"
}

buildsed(){
local patterns=("$@")
local seds=""
for p in "${patterns[@]}"; do
local escaped=$(echo "$p" | sed 's/\//\\\//g')
seds+="s/$escaped//g;"
done
echo "$seds"
}
searchp(){
local file="$1"
shift
local patterns=("$@")
local regg=$(buildgrep "${patterns[@]}")
if grep -E "$regg" "$file";then
echo "pattern matched"
fi
}
delp(){
local file="$1"
shift
local patterns=("$@")
local seds=$(buildsed "${patterns[@]}")
sed -E -i "$seds" "$file"
echo "All occurences of patterns deleted from file"
}
disp(){
echo "Menu"
echo "a) Search for patterns"
echo "b) delete all occurences of patterns"
echo "c) exit"
}
if [ "$#" -lt 2 ]; then
dispusage
fi
numargs=$#
inpfile="${@:$numargs:1}"
patternsa=("${@:1:$((numargs - 1))}")
while true; do
disp
read -p "Enter ur choice: " choice
case "$choice" in
a|A)
searchp "$inpfile" "${patternsa[@]}"
;;
b|B)
delp "$inpfile" "${patternsa[@]}"
;;
c|C)
echo "Exiting..."
exit 0
;;
*)
echo "Invalid choice"
;;
esac
done
aps@KVK-OFFICE-DELL:~$ ./ex3.sh yoyo file.txt
Menu
a) Search for patterns
b) delete all occurences of patterns
c) exit
Enter ur choice: a
patterns here yoyoyo
yoyoyo
pattern matched
Menu
a) Search for patterns
b) delete all occurences of patterns
c) exit
Enter ur choice: b
All occurences of patterns deleted from file
Menu
a) Search for patterns
b) delete all occurences of patterns
c) exit
Enter ur choice: c
Exiting...



